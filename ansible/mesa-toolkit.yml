- name: Install MESA Tools
  shell: |
    cd {{ vm_tools_source_dir }}/github.com/cisagov/mesa-toolkit
    chmod +x mesa-install-tools.sh
    ./mesa-install-tools.sh -{{ system_platform }}
  become: yes

- name: Fix Ownership of Virtual Environment
  file:
    path: "/opt/MESA-venv"
    owner: "{{ vm_username }}"
    group: "{{ vm_username }}"
    recurse: yes
  become: yes

- name: MESA Gui
  shell: |
    . /opt/MESA-venv/bin/activate
    cd {{ vm_tools_source_dir }}/github.com/cisagov/mesa-gui
    pip install .
    pip install colorama # TODO: TEMP FIX
    pip install gunicorn
    cd mesa_gui
    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "/C=/ST=/L=/O=/OU=/CN=" # Creates self-signed SSL cert
    python manage.py migrate
    python manage.py loaddata mesa/fixtures/mesajobs.json
    export DJANGO_SUPERUSER_PASSWORD={{ mesa_user_password }}
    export DJANGO_SUPERUSER_EMAIL=vulnerability@cisa.dhs.gov
    python manage.py createsuperuser --username {{ mesa_user_name }} --no-input
    python manage.py collectstatic --noinput

- name: Disable DEBUG Mode
  lineinfile:
    path: "{{ vm_tools_source_dir }}/github.com/cisagov/mesa-gui/mesa_gui/mesa_gui/settings.py"
    regexp: '^DEBUG ='
    line: 'DEBUG = False'

- name: Allow for all hosts
  lineinfile:
    path: "{{ vm_tools_source_dir }}/github.com/cisagov/mesa-gui/mesa_gui/mesa_gui/settings.py"
    regexp: '^ALLOWED_HOSTS ='
    line: 'ALLOWED_HOSTS = ["*"]'

- name: Install nginx
  become: yes
  apt:
    name: nginx
    state: latest
    update_cache: yes

- name: Copy nginx config file
  become: yes
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-enabled/default
    owner: root
    group: root
    mode: 0644

- name: Install MESA-Gui as a Service
  template:
    src: mesa.service.j2
    dest: /etc/systemd/system/mesa.service
  become: yes

- name: Reload mesa
  systemd:
    daemon_reload: yes
    name: mesa
    state: restarted
    enabled: yes
  become: yes
